{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.12.0.0",
        "fileVersion": "4.12.0-3.24574.8 (dfa7fc6b)",
        "semanticVersion": "4.12.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this top-level file to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 71,
                  "endLine": 17,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 40,
                  "endLine": 17,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 66,
                  "endLine": 18,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 57,
                  "endLine": 18,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 30,
                  "endLine": 19,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 69,
                  "endLine": 20,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 60,
                  "endLine": 20,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 100,
                  "endLine": 20,
                  "endColumn": 101
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 9,
                  "endLine": 33,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 9,
                  "endLine": 39,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 11,
                  "endLine": 41,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 9,
                  "endLine": 47,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 9,
                  "endLine": 63,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Upload.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'Upload' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Upload.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 36,
                  "endLine": 20,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 76,
                  "endLine": 20,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetMimeType' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Upload.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 20,
                  "endLine": 64,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'Execute' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Grok.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 31,
                  "endLine": 14,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'Execute' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/GetRateLimit.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Grok.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 27,
                  "endLine": 18,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 27,
                  "endLine": 60,
                  "endColumn": 146
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Upload.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 34,
                  "endLine": 35,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/GetRateLimit.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 71,
                  "endLine": 18,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Program.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 43,
                  "endLine": 17,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/GetRateLimit.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 73,
                  "endLine": 38,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1861",
          "level": "note",
          "message": "Prefer 'static readonly' fields over constant array arguments if the called method is called repeatedly and is not mutating the passed array",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Utils/ParseGrokResponse.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 59,
                  "endLine": 121,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "paramName": "separator"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Execute' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/GetRateLimit.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Execute' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Grok.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 31,
                  "endLine": 14,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetMimeType' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/Upload.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 20,
                  "endLine": 64,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1859",
          "level": "note",
          "message": "Change return type of method 'BuildHeaders' from 'System.Collections.Generic.IReadOnlyDictionary<string, string>' to 'System.Collections.Generic.Dictionary<string, string>' for improved performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Utils/HttpHeaderCollection.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 60,
                  "endLine": 30,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await CopyToAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/GetRateLimit.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 29,
                  "endLine": 49,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await CopyToAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/GetRateLimit.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 29,
                  "endLine": 59,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await CopyToAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/_dev/repos/grok-cli/src/Services/GetRateLimit.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 29,
                  "endLine": 71,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1050": {
          "id": "CA1050",
          "shortDescription": "Declare types in namespaces",
          "fullDescription": "Types are declared in namespaces to prevent name collisions and as a way to organize related types in an object hierarchy.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1859": {
          "id": "CA1859",
          "shortDescription": "Use concrete types when possible for improved performance",
          "fullDescription": "Using concrete types avoids virtual or interface call overhead and enables inlining.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1859",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1861": {
          "id": "CA1861",
          "shortDescription": "Avoid constant arrays as arguments",
          "fullDescription": "Constant arrays passed as arguments are not reused when called repeatedly, which implies a new array is created each time. Consider extracting them to 'static readonly' fields to improve performance if the passed array is not mutated within the called method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1861",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons, as in 'string.ToLower() == string.ToLower()', because they lead to an allocation. Instead, use 'string.Equals(string, StringComparison)' to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S1075": {
          "id": "S1075",
          "shortDescription": "URIs should not be hardcoded",
          "fullDescription": "Hard-coding a URI makes it difficult to test a program for a variety of reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1075",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Nested ternaries are hard to read and can make the order of operations complex to understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6966": {
          "id": "S6966",
          "shortDescription": "Awaitable method should be used",
          "fullDescription": "In an async method, any blocking operations should be avoided.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6966",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}